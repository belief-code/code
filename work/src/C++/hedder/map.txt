    超有用。どんな番地にも書き込める無限配列のようなデータ構造。
例えばint A[100000]という配列を定義した時、0~99999番地までにしか書き込めない。
一方mapを使えば配列の番地としてint型だけでなくstring型やpair型まで使える。
vector<pair<type,type>> v;の上位互換的なデータ構造と言っても良いかも？
検索タグと検索物の組み合わせの集合と言っても良いかもしれない。
注意点:最初に個数の宣言とかはする必要がないし多分出来ない。
2,3重配列とか作ろうとしてる時こっちで実装できるか考えたほうが良い。


    変数の定義
// int 型の番地に int 型の変数を記録する場合（2^31 要素の int 型配列と同じような感じ）
map<int, int> M1;

// int 型の番地に string 型の変数を記録する場合（2^31 要素の string 型配列と同じような感じ）
map<int, string> M2;

// string 型の番地に double 型の変数を記録する場合
map<string, double> M3;


M1[x]
    マップのxという番地にアクセスする。
    多分アクセスして実際に操作するとメモリ上に場所が用意される

M1.clear();
    マップM1を初期化する。
    ビット集合を表す型。N桁の2進数と思うことも出来る。ビット演算を高速に行える。
and,or,xorなどの演算がO(N/32)程度で出来る。


    宣言
bitset<長さ> bs1;
    定義した長さのbitsetを定義する。

    初期化付き宣言
bitset<8> bs2(131);
    7ビット目から0ビットへの順番で10000011となる。

bitset<8> bs3("10000011");
    上と同じものを宣言する。

bitset<2000> bs4("10000011");
    1999ビット目から0ビット目の順番で、0...010000011となる。


a=(a^b);など
    int型などと同様にビット演算が出来る。

a.set(x);
    aのx桁目を1に変更する。

a.reset(x);
    aのx桁目を0に変更する。

a[i]
    aのi桁目にアクセスする。

a.count()
    aの全ての桁のうち、1となっている桁の個数を返す。
__builtin_popcount(x)とほぼ同じ。
　競技プログラミングにおいての本質的な目的意識は、
｢最悪｣計算量
を減らすことである。この元で使用するアルゴリズムなどが決定される。
またこれは、
-解くのが簡単な緩和問題から、実際の問題で求めるものが求められるものまで順番に緩和を軽減しながら
実際に問題で求めるものが求められるように小問題を設定して解いていく。(複数の最善データが
求められる場合(最小コスト経路問題は裏では複数の最善データが求められている)は大体これでテーブル全体の制約を、
最大に緩和したものから順番に緩和の軽減をして求めたり、普通に複数の最善データの中から簡単なものから順番に求めていくことで
大体解ける)
-｢絶対に｣(確率的視点は平均計算量を下げる上では必要となる)下位互換もしくは同価値の枝刈りを行う全探索(上記の緩和の観点から
操作回数の緩和を行っているとも取れる)
-累積和やセグメント木などのデータ構造によってデータの走査の計算量を下げる
などによって達成される。
0.最短経路問題とはなにか
　グラフ上の最短経路を求める問題。実際にはグラフ上の遷移を操作と見ることで、
操作系の問題として扱うことが出来る。
しかし最短経路の特性上テーブルを埋める系問題になる(一般の操作系問題はテーブルを作ることに重きが置かれる)
　最短経路問題は最小コスト経路問題の中の一つに過ぎない上にこれらは大概同一視出来る。
　このことから言い換えれば、問題の制約から可能遷移を最悪計算量の観点から、
可能な限り枝刈りして最悪計算量を下げる解法を与える問題。と言える。
1.最短経路問題全般で使われがちな考え
　もっとも一般的に使われるのは
-任意の最短経路上のノードまで経路は、そのノードまでの最短経路となっている(部分最適化)
-基本的にはある点について最短経路である保証をするには(最悪)全頂点への最短経路を計算する必要があるので、
なんらかのテーブルを埋めることが要請される。
(全ての隣接頂点からの移動を考えなくてはいけないから)
この考え。よって最短経路問題は用意されたテーブルを全て埋める系問題である。
　テーブルを最善データで埋める方法としては
-一要素ずつを求めていく(基本的には始点から一手で到達出来る頂点から)
例:ダイクストラ法、ベルマンフォード法(下の方法と勘違いしやすいが、どれが確定しているか見えないだけで
毎回どこかの最短経路が確定している)
-全要素を何らかの規則で複数回更新する
例:ワーシャルフロイド法
の2つがあり、後者は正当性のある道筋から更新方法を思いつくのは難しい場合が多く、
制限時間内に更新出来るような更新方法をそれらしいものから順に虱潰しに正当性があるか確認していくことで、
見つけられることが多い。
　一般的な操作系問題では、求められる答えが一つで、その答えを含むような良いテーブルを作って
更新していく

2.最短経路問題の種類
2.0.制約から種類分け
2.1.重みなしグラフ
2.2.重み付きグラフ
2.2.1.重み:実数全体
　ベルマン-フォード法
2.2.2.重み:非負実数全体
　ダイクストラ法
2.2.3.重み:整数全体
2.2.4.重み:非負整数全体
　正整数の場合:Thorupのアルゴリズム